apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: scan-deduplicator-cache
  labels:
    app: scan-deduplicator-cache
spec:
  serviceName: "scan-deduplicator-cache"
  replicas: 1
  selector:
    matchLabels:
      app: scan-deduplicator-cache
  template:
    metadata:
      labels:
        app: scan-deduplicator-cache
    spec:
      containers:
        - name: valkey
          image: docker.io/valkey/valkey:8-alpine
          ports:
            - containerPort: 6379
          command:
            - "valkey-server"
            # save a snapshot of the DB every 60 seconds if at least 1 write operation was performed
            - "--save"
            - "60"
            - "1"
            - --loglevel
            - warning
            - "--requirepass"
            - "$(VALKEY_PASSWORD)"
          volumeMounts:
            - name: data
              mountPath: /data
          env:
            - name: VALKEY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: scan-deduplicator-cache-credentials
                  key: password
          startupProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 1
            periodSeconds: 2
            failureThreshold: 30
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: scan-deduplicator-cache
spec:
  selector:
    app: scan-deduplicator-cache
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP
